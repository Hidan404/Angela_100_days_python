import os
import socket
import platform
import shutil
import psutil

def verificar_conexao():
    hostname = "8.8.8.8"  # Google DNS
    comando = "ping -n 4" if platform.system() == "Windows" else "ping -c 4"
    resposta = os.system(f"{comando} {hostname} > nul 2>&1" if platform.system() == "Windows" else f"{comando} {hostname} > /dev/null 2>&1")
    
    if resposta == 0:
        print("[‚úÖ] Conectado √† Internet!")
    else:
        print("[‚ùå] Sem conex√£o com a Internet!")

def obter_ip_local():
    ip_local = socket.gethostbyname(socket.gethostname())
    print(f"[‚ÑπÔ∏è] IP Local: {ip_local}")







def verificar_temperatura():
    sistema = platform.system()

    if sistema == "Windows":
        print("[‚ö†Ô∏è] Monitoramento de temperatura n√£o dispon√≠vel no Windows com psutil.")
    elif sistema == "Linux":
        try:
            temperaturas = psutil.sensors_temperatures()
            if "coretemp" in temperaturas:
                for sensor in temperaturas["coretemp"]:
                    print(f"[üå°] N√∫cleo {sensor.label}: {sensor.current}¬∞C")
            else:
                print("[‚ö†Ô∏è] Sensores de temperatura n√£o detectados.")
        except AttributeError:
            print("[‚ùå] Sensores de temperatura n√£o dispon√≠veis neste sistema.")
    else:
        print("[‚ùå] Sistema operacional n√£o suportado.")




def limpar_windows():
    caminhos = [
        os.path.expandvars(r"%TEMP%"),
        os.path.expandvars(r"C:\Windows\Temp")
    ]
    for caminho in caminhos:
        os.system(f"del /F /Q /S {caminho}\\*.*")

def limpar_linux():
    caminhos = ["/tmp", "/var/tmp"]
    for caminho in caminhos:
        shutil.rmtree(caminho, ignore_errors=True)

def limpar_sistema():
    sistema = platform.system()
    if sistema == "Windows":
        limpar_windows()
        print("[‚úÖ] Limpeza conclu√≠da no Windows!")
    elif sistema == "Linux":
        limpar_linux()
        print("[‚úÖ] Limpeza conclu√≠da no Linux!")
    else:
        print("[‚ùå] Sistema n√£o suportado.")

if __name__ == "__main__":
    limpar_sistema()





# Configura√ß√£o de pastas
if platform.system() == "Windows":
    origem = os.path.expanduser("C:\\Users\\SeuUsuario\\Documents")  # Ajuste seu usu√°rio
    destino = "D:\\Backup"  # Ajuste o caminho do destino
else:
    origem = os.path.expanduser("~/Documents")
    destino = "/media/user/Backup"

def realizar_backup():
    if not os.path.exists(destino):
        os.makedirs(destino)
    try:
        shutil.copytree(origem, destino, dirs_exist_ok=True)
        print(f"[‚úÖ] Backup conclu√≠do para {destino}")
    except Exception as e:
        print(f"[‚ùå] Erro ao fazer backup: {e}")

if __name__ == "__main__":
    realizar_backup()
